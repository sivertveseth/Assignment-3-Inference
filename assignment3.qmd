---
title: "Assignment 3: Drawing inference from statistical models, and statistical power"
author: "Sivert Helland Veseth"
format: html
code-fold: true
execute: 
  warning: false
editor: visual
editor_options: 
  chunk_output_type: console
---

## Sette opp simuleringen

```{r}
# Laster inn nødvendige pakker
library(tidyverse)
library(gridExtra)


set.seed(1) # Sikrer at alle dei tilfeldige tallene som generes er dei sammen hver gang koden kjøres
population <- rnorm(1000000, mean = 1.5, sd = 3) # Generer 1 million tilfeldige verdier som er normalfordelt

# Sample 1
samp1 <- data.frame(y = sample(population, 8, replace = FALSE))

# Sample 2
samp2 <- data.frame(y = sample(population, 40, replace = FALSE))

# Lager lineære modeller for hver sample med kun en konstant
m1 <- lm(y ~ 1, data = samp1)
m2 <- lm(y ~ 1, data = samp2)

# Oppsummering av modellen m1
summary(m1)
```

Under kan man se en .... som viser t-fordelingen av dei ulike lineære modellene, der det skyggelagte området er dei observerte p-verdiene.

```{r}
# Definer t-verdi 
t_value1 <- 1.47
t_value2 <- 3.953
df1 <- 7   # Antall frihetsgrader (n-1, her 8-1=7)
df2 <- 39  # Antall frihetsgrader (n-1, her 40-1=39)

# Lag dataramme for x-verdier
x_vals <- seq(-5, 5, length.out = 1000)

# Bruk ggplot for å lage en t-fordeling med skyggelagte områder for modell 1
plot1 <- ggplot(data.frame(x = x_vals), aes(x = x)) +
  stat_function(fun = dt, args = list(df = df1), color = "black", size = 1.5) +  # T-fordelingskurve
  geom_area(data = subset(data.frame(x = x_vals), x < -t_value1), aes(x = x, y = dt(x, df1)), fill = "gray", alpha = 0.5) +  # Venstre hale
  geom_area(data = subset(data.frame(x = x_vals), x > t_value1), aes(x = x, y = dt(x, df1)), fill = "gray", alpha = 0.5) +   # Høyre hale
  labs(title = "Observed t-value plotted in the null-hypothesis t-distribution", 
       x = "t", y = "Density f(t)") +
  theme_minimal()

# Gjør det samme for modell 2
plot2 <- ggplot(data.frame(x = x_vals), aes(x = x)) +
  stat_function(fun = dt, args = list(df = df2), color = "black", size = 1.5) +  # T-fordelingskurve
  geom_area(data = subset(data.frame(x = x_vals), x < -t_value2), aes(x = x, y = dt(x, df2)), fill = "gray", alpha = 0.5) +  # Venstre hale
  geom_area(data = subset(data.frame(x = x_vals), x > t_value2), aes(x = x, y = dt(x, df2)), fill = "gray", alpha = 0.5) +   # Høyre hale
   labs(x = "t", y = "Density f(t)") +
  theme_minimal()

# Kombiner de to plott ved siden av hverandre
grid.arrange(plot1, plot2, ncol = 2)
```

Svar på spørsmålene:

1.  Explain the estimate, SE, *t*-value, and *p*-value from the regression models that we created previously (`m1` and `m2`).
    -   <u>**Estimate**</u>: Den estimerte koeffisienten er selve gjennomsnittet av den avhengige variabelen i datasettet. Basert på utvalget (enten samp1 eller samp2), forteller den estimerte koeffisienten den sanne middelverdien i populasjonen `rnorm`. I vår modell vil den estimerte koeffisienten være lik gjennomsnittet av y.

    -   <u>\*\*Std.Error\*\*</u>: Standardfeilen måler kor mykje estimatet forventes å variere fra utvalg til utvalg. I vårt tilfelle, vil standardfeilen si kor mykje gjennomsnittet i utvalget vårt er forventet å variere fra utvalg til utvalg grunnet tilfeldig variasjon i datatene. SE beregnes slik:

$$
\text{SE} = \frac{s}{\sqrt{n}}
$$

hvor:

- \(s \) er standardavviket til utvalget
- \( n \) er antall observasjoner